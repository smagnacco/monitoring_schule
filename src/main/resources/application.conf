monitor-alarm {
  routes {
    request-timeout = 5s
  }
  http {
    interface = "0.0.0.0"
    port = 9290
    default-endpoint-timeout = 750 ms
  }
}

akka {
  http {
    server.parsing.max-content-length = 100m
    parsing.max-content-length = 100m
    parsing.max-to-strict-bytes = 100m
    routing.decode-max-size = 100m

    host-connection-pool.max-connections = 64
    host-connection-pool.max-open-requests = 64
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  extensions = []
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  loglevel = DEBUG
  log-dead-letters = on
  log-dead-letters-during-shutdown = off
  logger-startup-timeout = 30s

  actor {
    default-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 32
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }
  }
}

kamon {
  environment.service = "alarms"

  trace {
    sampler = "adaptive"
  }

  zipkin {
    host = "localhost"
    port = 9411
    protocol = "http"
    url = "http://localhost:9411/api/v2/spans"
  }

  propagation.http.default.tags {
    mappings {
      X-UOW = "X-UOW"
      X-Client = "X-Client"
    }
  }

  instrumentation.akka.filters {
    actor.track {
      includes = []
      excludes = ["*/system/**", "*/user/IO-**"]
    }
    dispatchers {
      includes = ["**"]
      excludes = []
    }
    routers {
      includes = []
      excludes = ["**"]
    }
  }

  instrumentation.akka.http {
    server {
      propagation {
        enabled = yes
        channel = default
      }
      metrics {
        enabled = yes
      }
    }
    client {
      propagation {
        enabled = yes
        channel = default
      }
    }
  }

  prometheus.include-environment-tags = yes

  prometheus.buckets.custom {
    "alarms.sorting-latency" = [0.001, 0.003, 0.005, 0.01, 0.02, 0.03, 0.04, 0.06, 0.08, 0.12, 0.16, 0.2, 0.3, 0.4]
  }

  modules {
    host-metrics.enabled = yes
    process-metrics.enabled = yew
    jvm-metrics.enabled = yes
  }
}
